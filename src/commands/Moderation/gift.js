// commands/Moderation/gift.js
const { SlashCommandBuilder } = require('@discordjs/builders');
const { EmbedBuilder, ActionRowBuilder, ButtonBuilder, ButtonStyle } = require('discord.js');
const Gift = require('../../Schemas.js/Gift');
const { v4: uuidv4 } = require('uuid'); // –ü–∞–∫–µ—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö ID

module.exports = {
    data: new SlashCommandBuilder()
        .setName('gift')
        .setDescription('–°–æ–∑–¥–∞–µ—Ç –ø–æ–¥–∞—Ä–æ–∫ –¥–ª—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤.')
        .addIntegerOption(option =>
            option.setName('amount')
                .setDescription('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–æ–Ω–µ—Ç –≤ –ø–æ–¥–∞—Ä–∫–µ.')
                .setRequired(true))
        .addIntegerOption(option =>
            option.setName('receivers')
                .setDescription('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –ø–æ–ª—É—á–∏—Ç—å –ø–æ–¥–∞—Ä–æ–∫.')
                .setRequired(true)),
    async execute(interaction) {
        const amount = interaction.options.getInteger('amount');
        const receivers = interaction.options.getInteger('receivers');

        const giftId = uuidv4();

        const newGift = new Gift({
            giftId,
            amount,
            receivers,
        });

        await newGift.save();

        const giftEmbed = new EmbedBuilder()
            .setTitle('üéÅ –ü–æ–¥–∞—Ä–æ–∫!')
            .setDescription(`–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å ${amount} ü™≤. –û—Å—Ç–∞–ª–æ—Å—å –º–µ—Å—Ç: ${receivers}`)
            .setColor('#3D4C8D')
            .setTimestamp();

        const row = new ActionRowBuilder()
            .addComponents(
                new ButtonBuilder()
                    .setCustomId(`claim-gift-${giftId}`)
                    .setLabel('–ü–æ–ª—É—á–∏—Ç—å ü™≤')
                    .setStyle(ButtonStyle.Primary)
            );

        await interaction.reply({ embeds: [giftEmbed], components: [row] });
    },
};
