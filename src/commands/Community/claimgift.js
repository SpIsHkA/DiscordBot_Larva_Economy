const { SlashCommandBuilder } = require('@discordjs/builders');
const { EmbedBuilder } = require('discord.js');
const Coin = require('../../Schemas.js/coin');

// –í—Ä–µ–º—è –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö –¥–ª—è –ø–µ—Ä–∏–æ–¥–∞ –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥–∞—Ä–∫–∞ (12 —á–∞—Å–∞)
const GIFT_COOLDOWN = 12 * 60 * 60 * 1000;

module.exports = {
    data: new SlashCommandBuilder()
        .setName('claimgift')
        .setDescription('–ó–∞–±–∏—Ä–∞–µ—Ç –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –ø–æ–¥–∞—Ä–æ–∫ –≤ –≤–∏–¥–µ –º–æ–Ω–µ—Ç'),
    async execute(interaction) {
        const userId = interaction.user.id;

        try {
            // –ò—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å
            let user = await Coin.findOne({ userId: userId });

            if (!user) {
                user = await Coin.create({ userId: userId, coins: 0, lastGiftClaimed: null });
            }

            const currentTime = Date.now();
            const lastGiftClaimed = user.lastGiftClaimed;



            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø—Ä–æ—à–ª–æ –ª–∏ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –≤—Ä–µ–º–µ–Ω–∏ —Å –º–æ–º–µ–Ω—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥–∞—Ä–∫–∞
            if (lastGiftClaimed && currentTime - lastGiftClaimed < GIFT_COOLDOWN) {
                const timeRemaining = GIFT_COOLDOWN - (currentTime - lastGiftClaimed);
                const hoursRemaining = Math.floor(timeRemaining / (60 * 60 * 1000));
                const minutesRemaining = Math.floor((timeRemaining % (60 * 60 * 1000)) / (60 * 1000));

                const giftEndEmbed = new EmbedBuilder()
                .setTitle('–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –ø–æ–¥–∞—Ä–æ–∫!')
                .setDescription(`–í—ã —É–∂–µ –∑–∞–±—Ä–∞–ª–∏ —Å–≤–æ–π –ø–æ–¥–∞—Ä–æ–∫.`)
                .setColor('#3D4C8D')
                .setFooter({ text: `–ü–æ–≤—Ç–æ—Ä–Ω—ã–π –ø–æ–¥–∞—Ä–æ–∫ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω —á–µ—Ä–µ–∑ ${hoursRemaining} —á. ${minutesRemaining} –º–∏–Ω.`});

                return interaction.reply({ embeds: [giftEndEmbed]});
            }

            // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–æ–Ω–µ—Ç –¥–ª—è –ø–æ–¥–∞—Ä–∫–∞
            const giftCoins = Math.floor(Math.random() * (100 - 50 + 1)) + 50;

            // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–æ–Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥–∞—Ä–∫–∞
            user.coins += giftCoins;
            user.lastGiftClaimed = currentTime;
            await user.save();

            const giftEmbed = new EmbedBuilder()
                .setTitle('–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –ø–æ–¥–∞—Ä–æ–∫!')
                .setDescription(`–í—ã –ø–æ–ª—É—á–∏–ª–∏ ${giftCoins} ü™≤.`)
                .setColor('#3D4C8D');

            return interaction.reply({ embeds: [giftEmbed] });
        } catch (error) {
            console.error(error);
            return interaction.reply({ content: '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ–¥–∞—Ä–∫–∞.', ephemeral: true });
        }
    },
};
