const { SlashCommandBuilder } = require('@discordjs/builders');
const { EmbedBuilder } = require('discord.js');
const Coin = require('../../Schemas.js/coin');

module.exports = {
    data: new SlashCommandBuilder()
        .setName('transfer')
        .setDescription('–ü–µ—Ä–µ–≤–æ–¥–∏—Ç ü™≤ –¥—Ä—É–≥–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, –∫–æ–º–∏—Å—Å–∏—è 5%')
        .addUserOption(option => option.setName('recipient').setDescription('–ü–æ–ª—É—á–∞—Ç–µ–ª—å –ø–µ—Ä–µ–≤–æ–¥–∞').setRequired(true))
        .addIntegerOption(option => option.setName('amount').setDescription('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ ü™≤ –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞').setRequired(true)),
    async execute(interaction) {
        const senderId = interaction.user.id;
        const recipientId = interaction.options.getUser('recipient').id;
        const amount = interaction.options.getInteger('amount');
        const commissionRate = 0.05; // 5% –∫–æ–º–∏—Å—Å–∏—è
        const commission = Math.ceil(amount * commissionRate); // –û–∫—Ä—É–≥–ª—è–µ–º –¥–æ –±–ª–∏–∂–∞–π—à–µ–≥–æ —Ü–µ–ª–æ–≥–æ
        const totalAmount = amount + commission; // –û–±—â–∞—è —Å—É–º–º–∞, –∫–æ—Ç–æ—Ä—É—é –Ω—É–∂–Ω–æ —Å–ø–∏—Å–∞—Ç—å —Å –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è

        try {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ ü™≤ –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ —Å —É—á–µ—Ç–æ–º –∫–æ–º–∏—Å—Å–∏–∏
            const sender = await Coin.findOne({ userId: senderId });
            if (!sender || sender.coins < totalAmount) {
                return interaction.reply({content: '–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ ü™≤ –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ —Å —É—á–µ—Ç–æ–º –∫–æ–º–∏—Å—Å–∏–∏.', ephemeral: true});
            }

            // –ù–∞—Ö–æ–¥–∏–º –ø–æ–ª—É—á–∞—Ç–µ–ª—è –∏ –æ–±–Ω–æ–≤–ª—è–µ–º –∏—Ö –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ ü™≤
            const recipient = await Coin.findOne({ userId: recipientId });
            if (!recipient) {
                return interaction.reply({content: '–£–∫–∞–∑–∞–Ω–Ω—ã–π –ø–æ–ª—É—á–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.', ephemeral: true});
            }

            sender.coins -= totalAmount;
            recipient.coins += amount;

            await Promise.all([sender.save(), recipient.save()]);

            const transferEmbed = new EmbedBuilder()
                .setTitle('–ü–µ—Ä–µ–≤–æ–¥ ü™≤')
                .setDescription(`–í—ã —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–≤–µ–ª–∏ ${amount} ü™≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${interaction.options.getUser('recipient').username}. –ö–æ–º–∏—Å—Å–∏—è –∑–∞ –ø–µ—Ä–µ–≤–æ–¥ —Å–æ—Å—Ç–∞–≤–∏–ª–∞ ${commission} ü™≤.`)
                .setColor('#3D4C8D');

            return interaction.reply({ embeds: [transferEmbed] });
        } catch (error) {
            console.error(error);
            return interaction.reply({ content: '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –ø–µ—Ä–µ–≤–æ–¥–∞ ü™≤.', ephemeral: true });
        }
    },
};
