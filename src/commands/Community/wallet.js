const { SlashCommandBuilder } = require('@discordjs/builders');
const { EmbedBuilder } = require('discord.js');
const Coin = require('../../Schemas.js/coin');

module.exports = {
    data: new SlashCommandBuilder()
        .setName('wallet')
        .setDescription('–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ ü™≤ –∏ –¥—Ä—É–≥—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.')
        .addUserOption(option =>
            option.setName('–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å')
                .setDescription('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, —á–µ–π –∫–æ—à–µ–ª–µ–∫ –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–≤–∏–¥–µ—Ç—å')
                .setRequired(false)),
    async execute(interaction) {
        const userOption = interaction.options.getUser('–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å');
        const userId = userOption ? userOption.id : interaction.user.id;

        try {
            let user = await Coin.findOne({ userId: userId });

            if (!user) {
                return interaction.reply({ content: '–£ —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç ü™≤', ephemeral: true });
            }

            const partner = user.partnerId ? await interaction.client.users.fetch(user.partnerId) : null;

            const walletEmbed = new EmbedBuilder()
                .setTitle(`${userOption ? userOption.username : interaction.user.username}`)
                .setThumbnail(userOption ? userOption.avatarURL({ dynamic: true }) : interaction.user.avatarURL({ dynamic: true }))
                .addFields(
                    { name: '–ü–æ—Å–ª–µ–¥–Ω–∏–π –ø–æ–¥–∞—Ä–æ–∫', value: user.lastGiftClaimed ? user.lastGiftClaimed.toLocaleString() : '–ù–µ –ø–æ–ª—É—á–µ–Ω', inline: true },
                    { name: '–ê–∫—Ç–∏–≤–Ω—ã–µ –ø—Ä–æ–º–æ–∫–æ–¥—ã', value: user.promocodes.length > 0 ? user.promocodes.map(pc => `**${pc.code}**: ${pc.promocoins} ü™≤`).join('\n') : '–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∫–æ–¥–æ–≤', inline: true },
                    { name: '–ë—Ä–∞–∫ —Å', value: user.partnerId ? `<@${user.partnerId}>` : '–ù–µ—Ç', inline: true }
                )
                .setColor('#3D4C8D')
                .setTimestamp();

            // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —á—É–∂–æ–π –∫–æ—à–µ–ª–µ–∫, –¥–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–æ–Ω–µ—Ç–∞—Ö
            if (!userOption || userOption.id === interaction.user.id) {
                walletEmbed.setDescription(`–£ –≤–∞—Å ${user.coins} ü™≤`);
            } else {
                walletEmbed.setDescription('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ—à–µ–ª—å–∫–µ –¥—Ä—É–≥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.');
            }

            return interaction.reply({ embeds: [walletEmbed] });
        } catch (error) {
            console.error(error);
            return interaction.reply({ content: '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–æ—à–µ–ª—å–∫–µ.', ephemeral: true });
        }
    },
};
