const { SlashCommandBuilder } = require('@discordjs/builders');
const { EmbedBuilder } = require('discord.js');
const LotteryTickets = require('../../Schemas.js/LotteryTickets');
const Coin = require('../../Schemas.js/coin');

module.exports = {
    data: new SlashCommandBuilder()
        .setName('buyticket')
        .setDescription('–ü–æ–∫—É–ø–∞–µ—Ç –±–∏–ª–µ—Ç –¥–ª—è —É—á–∞—Å—Ç–∏—è –≤ –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ–π –ª–æ—Ç–µ—Ä–µ–µ.')
        .addIntegerOption(option => option.setName('quantity').setDescription('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∏–ª–µ—Ç–æ–≤ –¥–ª—è –ø–æ–∫—É–ø–∫–∏').setRequired(true)),
    async execute(interaction) {
        const userId = interaction.user.id;
        const quantity = interaction.options.getInteger('quantity');
        const ticketPrice = 10;
        const totalPrice = quantity * ticketPrice;

        try {
            const user = await Coin.findOne({ userId });

            if (!user || user.coins < totalPrice) {
                return interaction.reply({ content: '–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ ü™≤ –¥–ª—è –ø–æ–∫—É–ø–∫–∏ –±–∏–ª–µ—Ç–æ–≤.', ephemeral: true });
            }

            user.coins -= totalPrice;
            await user.save();

            const existingTicket = await LotteryTickets.findOne({ userId });

            if (existingTicket) {
                existingTicket.tickets += quantity;
                await existingTicket.save();
            } else {
                const newTicket = new LotteryTickets({
                    userId,
                    tickets: quantity
                });
                await newTicket.save();
            }

            const purchaseEmbed = new EmbedBuilder()
                .setTitle('–ë–∏–ª–µ—Ç—ã –∫—É–ø–ª–µ–Ω—ã')
                .setDescription(`–í—ã —É—Å–ø–µ—à–Ω–æ –∫—É–ø–∏–ª–∏ ${quantity} –±–∏–ª–µ—Ç–æ–≤ –Ω–∞ –ª–æ—Ç–µ—Ä–µ—é –∑–∞ ${totalPrice} ü™≤. –£–¥–∞—á–∏!`)
                .setColor('#3D4C8D');

            return interaction.reply({ embeds: [purchaseEmbed] });
        } catch (error) {
            console.error(error);
            return interaction.reply({ content: '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ –±–∏–ª–µ—Ç–æ–≤.', ephemeral: true });
        }
    }
};
