const { SlashCommandBuilder } = require('@discordjs/builders');
const { EmbedBuilder } = require('discord.js');
const LotteryTickets = require('../../Schemas.js/LotteryTickets');

module.exports = {
    data: new SlashCommandBuilder()
        .setName('lotteryinfo')
        .setDescription('–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–µ–∫—É—â—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ª–æ—Ç–µ—Ä–µ–µ.'),
    async execute(interaction) {
        try {
            const tickets = await LotteryTickets.find();
            const totalTickets = tickets.reduce((acc, ticket) => acc + ticket.tickets, 0);
            const uniqueUsers = [...new Set(tickets.map(ticket => ticket.userId))].length;
            const prizePool = totalTickets * 10; // 10 ü™≤ –∑–∞ –∫–∞–∂–¥—ã–π –±–∏–ª–µ—Ç

            const lotteryInfoEmbed = new EmbedBuilder()
                .setTitle('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ª–æ—Ç–µ—Ä–µ–µ')
                .setDescription(`–í—Å–µ–≥–æ –±–∏–ª–µ—Ç–æ–≤: ${totalTickets}\n–£—á–∞—Å—Ç–Ω–∏–∫–æ–≤: ${uniqueUsers}\n–ü—Ä–∏–∑–æ–≤–æ–π —Ñ–æ–Ω–¥: ${prizePool} ü™≤`)
                .setColor('#3D4C8D');

            return interaction.reply({ embeds: [lotteryInfoEmbed] });
        } catch (error) {
            console.error(error);
            return interaction.reply({ content: '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ª–æ—Ç–µ—Ä–µ–µ.', ephemeral: true });
        }
    }
};
